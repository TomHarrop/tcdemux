---
name: deploy

on:
  push:
    branches:
      - "main"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Define Repository Name
        run: |
            repo=${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}
            echo "repo is $repo."
            echo "reponame=$repo" >> $GITHUB_ENV
      - name: Define Release Version
        run: |
          release=$(python3 setup.py --version)
          echo "release is $release"
          echo "release_tag=$release" >> $GITHUB_ENV
      - name: Check if the release exists
        run: |
            git fetch --tags
            echo "all tags:"
            echo "$(git tag -l)"
            if [ $(git tag -l ${{ env.release_tag }}) ]; then
                echo "Tag ${{ env.release_tag }} already exists"
                echo "new_release=false" >> $GITHUB_ENV
            else
                echo "new_release=true" >> $GITHUB_ENV
            fi
      - name: Create Release
        id: create_release
        if: ${{ env.new_release == "true" }}
        run: |
          gh release create ${{ env.release_tag }} \
            --title ${{ env.release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
